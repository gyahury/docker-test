name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      ACME_EMAIL: ${{ secrets.ACME_EMAIL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get remove containerd containerd.io
          sudo apt-get install -y docker.io docker-compose
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push images with Docker Compose
        run: |
          docker-compose build
          docker-compose push

  #deploy:
    #runs-on: ubuntu-latest
    #needs: build
    #steps:
      #- name: Update or Create Service on Server
      #  uses: appleboy/ssh-action@master
      #  with:
          #host: ${{ secrets.SERVER_IP }}
          #username: ${{ secrets.SERVER_USERNAME }}
          #password: ${{ secrets.SERVER_PASSWORD }}
          #port: ${{ secrets.SERVER_PORT }}
          #script: |
            #source ~/.zshrc
            #if docker service inspect testapp > /dev/null 2>&1; then
              #echo "Updating existing service..."
              #docker service update 
              #--image ${{ secrets.DOCKERHUB_USERNAME }}/testapp:latest testapp
            #else
              #echo "Creating new service..."
              #docker service create \
              #--name testapp \
              #--replicas 3 \
              #--publish published=80,target=80 \
              #-e SERVER_PORT=${{ secrets.SERVER_PORT }} \
              #-e MYSQL_PORT=${{ secrets.MYSQL_PORT }} \
              #-e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
              #-e MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }} \
              #-e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
              #-e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
              #-e ACME_EMAIL=${{ secrets.ACME_EMAIL }} \
              #${{ secrets.DOCKERHUB_USERNAME }}/testapp:latest
            #fi
